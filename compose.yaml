version: "3.3"

volumes:
  postgres_data:
  static_data:
  media_data:

services:
  db:
    image: postgres:16
    container_name: django_app_db
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  backend:
    build: ./backend
    container_name: django_app_backend
    env_file: .env
    volumes:
      - static_data:/app/static
      - media_data:/app/media
    depends_on:
      - db
      - rabbitmq
      - celery
      - nginx
    ports:
      - 8000:8000
    restart: always
    command: sh -c "python3 manage.py makemigrations &&
                    python3 manage.py migrate &&
                    python manage.py loaddata fixtures/goods/categories.json &&
                    python manage.py loaddata fixtures/goods/products.json &&
                    python manage.py createcachetable &&
                    gunicorn -c gunicorn_config.py django_app.wsgi:application"

  redis:
    image: redis:7.2.3-alpine
    container_name: django_app_redis
    restart: unless-stopped
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3.8
    container_name: django_app_rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"

  celery:
    build: ./backend
    container_name: django_app_celery
    env_file: .env
    depends_on:
      - db
      - rabbitmq
    volumes:
      - static_data:/app/static
    restart: always
    command: celery -A django_app worker --loglevel=info -P eventlet

  nginx:
    image: nginx:latest
    container_name: django_app_nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_data:/app/static
      - media_data:/app/media
    ports:
      - 8080:80
    restart: always